#!/bin/bash

get_distro(){
    DISTRO=$(lsb_release -i | cut -f 2 | tr [A-Z] [a-z])

    if [[ $? -ne 0 ]]; then
       DISTRO=$(head -1 /etc/issue | cut -f 1 -d " " | tr [A-Z] [a-z])
    fi

    echo $DISTRO
}

get_version(){
    VERSION=$(lsb_release -r |  cut -f 2 | cut -f 1 -d ".")

    if [[ $? -ne 0 ]]; then
       if [[ ! -f /etc/redhat-release  ]]; then
           VERSION=$(head -1 /etc/issue | cut -f 3 -d " " )
       else
           VERSION=$(cat /etc/redhat-release | cut -f 4 -d " " | cut -f 1 -d ".")
       fi
    fi

    echo $VERSION
}

get_codename(){
    CODENAME=$(lsb_release -c | cut -f 2)
    ret=$?

    if [[ "$CODENAME" == "Core" ]]; then
       CODENAME="el"$VERSION
    elif [[ $ret -ne 0 ]]; then
       CODENAME=$(grep "VERSION="  /etc/os-release | sed 's/.*(\([a-z]\+\))"/\1/g')
    fi

    echo $CODENAME

}

build_alignak_deb(){
    cp -r ~/alignak-packaging/debian ~/alignak-packaging/manpages ~/alignak-packaging/systemd ~/alignak
    if [[ $SYSTEMD_FILES -eq 0 ]]; then
        sed -i 's/^systemd/#systemd/' ~/alignak/debian/alignak-all.install  # Comment systemd files
        sed -i 's/^#bin/bin/' ~/alignak/debian/alignak-all.install # Uncomment init scripts
        sed -i 's/#mv /mv /' ~/alignak/debian/rules  # Uncomment etc/default move
        sed -i 's/#//' ~/alignak/debian/patches/series
    fi

    cd
    VERSION=$(awk -F'\(?\-?' '/alignak/ {print $2}' alignak/debian/changelog | head -1)
    if [[ -z $1 ]]; then 
        # We only create a "current" version for upstream build
        cd alignak
        RELEASE=$(git log -1  --format=%ct.%h)
        cd ../
        sed -i "s/-\([0-9]\+\))/-\1.$RELEASE)/g" alignak/debian/changelog
    else
        sed -i "s/-\([0-9]\+\))/-\1~$CODENAME)/g" alignak/debian/changelog
    fi
    tar -czf alignak_$VERSION.orig.tar.gz alignak
    cd alignak
    dpkg-buildpackage
    mv ../alignak*.deb $OUT_DIR

    #TODO add lintian and grep W|E to count them
}

build_alignak_rpm(){
    cp -r ~/alignak-packaging/debian ~/alignak-packaging/manpages ~/alignak
    cd
    VERSION=$(awk '/Version/ {print $2}' ~/alignak-packaging/alignak.spec)
    if [[ -z $1 ]]; then
        # We only create a "current" version for upstream build
        cd alignak
        RELEASE=$(git log -1  --format=%ct_%h)
        cd ../
        sed -i "s/\(Release:.*\)$/\1_$RELEASE/g" ~/alignak-packaging/alignak.spec
    fi
    mkdir -p ~/rpmbuild/SOURCES
    tar -czf ~/rpmbuild/SOURCES/alignak-$VERSION.tar.gz alignak
    rpmbuild -ba  ~/alignak-packaging/alignak.spec
    rm -rf ~/rpmbuild/RPMS/x86_64/*debuginfo*.rpm
    new_name=$(basename ~/rpmbuild/RPMS/x86_64/*.rpm | sed "s/\(.*\).x86_64.rpm/\1.$CODENAME.x86_64.rpm/g")
    mv ~/rpmbuild/RPMS/x86_64/*.rpm $OUT_DIR/$new_name

    #TODO add rpmlint and grep W|E to count them
}

prepare_upstream(){
    cd ~/alignak-packaging/
    git fetch origin
    git checkout -f origin/master -B master
    cd ~/alignak
    git fetch origin
    git checkout -f origin/develop -B develop

}

prepare_tag(){
    cd ~/alignak-packaging/
    git fetch origin
    git checkout $1
    # Checking out a tag wont create a branch
    # And having a branch named as a tag is not a good idea
    # This line is kinda useless when checking out another branch
    git checkout -b b$1
    cd ~/alignak
    git fetch origin
    git checkout $1
    git checkout -b b$1

}

# We have a global variable TAG
SYSTEMD_FILES=${SYSTEMD_FILES-1}  # By default we include systemd files
DISTRO=$(get_distro)
VERSION=$(get_version)
CODENAME=$(get_codename)
OUT_DIR=/root/build-dir/${DISTRO}_${VERSION}
mkdir -p $OUT_DIR

if [[ -z $TAG ]]; then
    prepare_upstream
else
    prepare_tag $TAG
fi

case $DISTRO in
    debian|ubuntu)
        build_alignak_deb $TAG
        ;;
    fedora|centos|redhat)
        build_alignak_rpm $TAG
        ;;
    *)
        exit 1
        ;;
esac
